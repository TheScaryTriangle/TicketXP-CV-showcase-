{
  "contractName": "ContextUpgradeable",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        1717
      ],
      "Initializable": [
        448
      ]
    },
    "id": 1718,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1681,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:24:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 1683,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1718,
        "sourceUnit": 449,
        "src": "126:63:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1682,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 448,
              "src": "134:13:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1685,
              "name": "Initializable",
              "nameLocations": [
                "728:13:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 448,
              "src": "728:13:5"
            },
            "id": 1686,
            "nodeType": "InheritanceSpecifier",
            "src": "728:13:5"
          }
        ],
        "canonicalName": "ContextUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1684,
          "nodeType": "StructuredDocumentation",
          "src": "191:496:5",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 1717,
        "linearizedBaseContracts": [
          1717,
          448
        ],
        "name": "ContextUpgradeable",
        "nameLocation": "706:18:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1691,
              "nodeType": "Block",
              "src": "800:7:5",
              "statements": []
            },
            "id": 1692,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1688,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "783:16:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 357,
                  "src": "783:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "783:16:5"
              }
            ],
            "name": "__Context_init",
            "nameLocation": "757:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:2:5"
            },
            "returnParameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:5"
            },
            "scope": 1717,
            "src": "748:59:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1697,
              "nodeType": "Block",
              "src": "875:7:5",
              "statements": []
            },
            "id": 1698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1694,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "858:16:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 357,
                  "src": "858:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "858:16:5"
              }
            ],
            "name": "__Context_init_unchained",
            "nameLocation": "822:24:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:5"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:5"
            },
            "scope": 1717,
            "src": "813:69:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1706,
              "nodeType": "Block",
              "src": "949:34:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1703,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "966:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "970:6:5",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "966:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1702,
                  "id": 1705,
                  "nodeType": "Return",
                  "src": "959:17:5"
                }
              ]
            },
            "id": 1707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "896:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:2:5"
            },
            "returnParameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1707,
                  "src": "940:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:9:5"
            },
            "scope": 1717,
            "src": "887:96:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1715,
              "nodeType": "Block",
              "src": "1056:32:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1712,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1073:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1077:4:5",
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "1073:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 1711,
                  "id": 1714,
                  "nodeType": "Return",
                  "src": "1066:15:5"
                }
              ]
            },
            "id": 1716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "998:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:2:5"
            },
            "returnParameters": {
              "id": 1711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "1040:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:16:5"
            },
            "scope": 1717,
            "src": "989:99:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1718,
        "src": "688:402:5",
        "usedErrors": [
          211,
          214
        ],
        "usedEvents": [
          219
        ]
      }
    ],
    "src": "101:990:5"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        1717
      ],
      "Initializable": [
        448
      ]
    },
    "id": 1718,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1681,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:24:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 1683,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1718,
        "sourceUnit": 449,
        "src": "126:63:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1682,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 448,
              "src": "134:13:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1685,
              "name": "Initializable",
              "nameLocations": [
                "728:13:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 448,
              "src": "728:13:5"
            },
            "id": 1686,
            "nodeType": "InheritanceSpecifier",
            "src": "728:13:5"
          }
        ],
        "canonicalName": "ContextUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1684,
          "nodeType": "StructuredDocumentation",
          "src": "191:496:5",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 1717,
        "linearizedBaseContracts": [
          1717,
          448
        ],
        "name": "ContextUpgradeable",
        "nameLocation": "706:18:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1691,
              "nodeType": "Block",
              "src": "800:7:5",
              "statements": []
            },
            "id": 1692,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1688,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "783:16:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 357,
                  "src": "783:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "783:16:5"
              }
            ],
            "name": "__Context_init",
            "nameLocation": "757:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:2:5"
            },
            "returnParameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:5"
            },
            "scope": 1717,
            "src": "748:59:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1697,
              "nodeType": "Block",
              "src": "875:7:5",
              "statements": []
            },
            "id": 1698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1694,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "858:16:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 357,
                  "src": "858:16:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "858:16:5"
              }
            ],
            "name": "__Context_init_unchained",
            "nameLocation": "822:24:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:5"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:5"
            },
            "scope": 1717,
            "src": "813:69:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1706,
              "nodeType": "Block",
              "src": "949:34:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1703,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "966:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "970:6:5",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "966:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1702,
                  "id": 1705,
                  "nodeType": "Return",
                  "src": "959:17:5"
                }
              ]
            },
            "id": 1707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "896:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:2:5"
            },
            "returnParameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1707,
                  "src": "940:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:9:5"
            },
            "scope": 1717,
            "src": "887:96:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1715,
              "nodeType": "Block",
              "src": "1056:32:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1712,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1073:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1077:4:5",
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "1073:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 1711,
                  "id": 1714,
                  "nodeType": "Return",
                  "src": "1066:15:5"
                }
              ]
            },
            "id": 1716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "998:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:2:5"
            },
            "returnParameters": {
              "id": 1711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "1040:14:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1709,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:16:5"
            },
            "scope": 1717,
            "src": "989:99:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1718,
        "src": "688:402:5",
        "usedErrors": [
          211,
          214
        ],
        "usedEvents": [
          219
        ]
      }
    ],
    "src": "101:990:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2023-10-24T14:16:38.397Z",
  "devdoc": {
    "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}